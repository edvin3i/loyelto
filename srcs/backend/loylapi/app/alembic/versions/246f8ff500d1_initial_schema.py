"""initial schema

Revision ID: 246f8ff500d1
Revises: 
Create Date: 2025-05-11 02:10:49.002689

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '246f8ff500d1'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('businesses',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('slug', sa.String(length=64), nullable=False),
    sa.Column('logo_url', sa.String(length=512), nullable=True),
    sa.Column('owner_email', sa.String(length=320), nullable=False),
    sa.Column('description', sa.String(length=512), nullable=False),
    sa.Column('country', sa.String(length=64), nullable=False),
    sa.Column('city', sa.String(length=128), nullable=False),
    sa.Column('address', sa.String(length=128), nullable=False),
    sa.Column('zip_code', sa.String(length=12), nullable=False),
    sa.Column('owner_privkey', sa.String(length=88), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.CheckConstraint('length(slug) >= 3', name='check_slug_min_length'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_businesses_owner_email'), 'businesses', ['owner_email'], unique=False)
    op.create_index(op.f('ix_businesses_slug'), 'businesses', ['slug'], unique=True)
    op.create_table('celery_task_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('task_id', sa.String(length=50), nullable=False),
    sa.Column('queue', sa.String(length=32), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'SUCCESS', 'FAILED', 'RETRY', name='task_status_enum'), nullable=False),
    sa.Column('payload', sa.JSON(), nullable=True),
    sa.Column('result', sa.String(length=32), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('task_id')
    )
    op.create_index(op.f('ix_celery_task_logs_queue'), 'celery_task_logs', ['queue'], unique=False)
    op.create_index(op.f('ix_celery_task_logs_status'), 'celery_task_logs', ['status'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('privy_id', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=320), nullable=False),
    sa.Column('phone', sa.String(length=32), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone')
    )
    op.create_index(op.f('ix_users_privy_id'), 'users', ['privy_id'], unique=True)
    op.create_table('tokens',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('mint', sa.String(length=64), nullable=False),
    sa.Column('symbol', sa.String(length=6), nullable=False),
    sa.Column('coin_logo_url', sa.String(length=512), nullable=True),
    sa.Column('decimals', sa.Integer(), nullable=False),
    sa.Column('business_id', sa.UUID(), nullable=True),
    sa.Column('settlement_token', sa.Boolean(), nullable=False),
    sa.Column('rate_loyl', sa.Numeric(precision=18, scale=6), nullable=False),
    sa.Column('min_rate', sa.Numeric(precision=18, scale=6), nullable=True),
    sa.Column('max_rate', sa.Numeric(precision=18, scale=6), nullable=True),
    sa.Column('total_supply', sa.BigInteger(), nullable=False, comment='Current totalSupply (base-units)'),
    sa.CheckConstraint('decimals BETWEEN 0 AND 9', name='check_decimals_range'),
    sa.CheckConstraint('min_rate <= max_rate', name='check_min_le_max_rate'),
    sa.ForeignKeyConstraint(['business_id'], ['businesses.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('symbol')
    )
    op.create_index(op.f('ix_tokens_mint'), 'tokens', ['mint'], unique=True)
    op.create_index('uq_single_loyl', 'tokens', ['settlement_token'], unique=True, postgresql_where=sa.text('settlement_token IS TRUE'))
    op.create_table('voucher_templates',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('business_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('description', sa.String(length=320), nullable=True),
    sa.Column('image_url', sa.String(length=320), nullable=True),
    sa.Column('price_points', sa.BigInteger(), nullable=False),
    sa.Column('supply', sa.Integer(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('collection_mint', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['business_id'], ['businesses.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('collection_mint')
    )
    op.create_table('wallets',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('pubkey', sa.String(length=44), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'pubkey', name='uq_user_pubkey')
    )
    op.create_index(op.f('ix_wallets_pubkey'), 'wallets', ['pubkey'], unique=True)
    op.create_table('balances',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('wallet_id', sa.UUID(), nullable=False),
    sa.Column('token_id', sa.UUID(), nullable=False),
    sa.Column('amount', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['token_id'], ['tokens.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['wallet_id'], ['wallets.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('wallet_id', 'token_id', name='uq_wallet_token')
    )
    op.create_table('point_txs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('wallet_id', sa.UUID(), nullable=True),
    sa.Column('token_id', sa.UUID(), nullable=False),
    sa.Column('tx_type', sa.Enum('EARN', 'REDEEM', 'SWAP_IN', 'SWAP_OUT', name='tx_type_enum'), nullable=False),
    sa.Column('amount', sa.BigInteger(), nullable=False),
    sa.Column('fee_bps', sa.Integer(), nullable=True),
    sa.Column('sol_sig', sa.String(length=128), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.CheckConstraint('fee_bps BETWEEN 0 AND 10000'),
    sa.ForeignKeyConstraint(['token_id'], ['tokens.id'], ),
    sa.ForeignKeyConstraint(['wallet_id'], ['wallets.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_point_txs_wallet_id'), 'point_txs', ['wallet_id'], unique=False)
    op.create_table('swap_txs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('from_token_id', sa.UUID(), nullable=False),
    sa.Column('to_token_id', sa.UUID(), nullable=False),
    sa.Column('from_amount', sa.BigInteger(), nullable=False),
    sa.Column('to_amount', sa.BigInteger(), nullable=False),
    sa.Column('fee_bps', sa.Integer(), nullable=False),
    sa.Column('sol_sig', sa.String(length=128), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.CheckConstraint('from_amount > 0 AND to_amount > 0'),
    sa.ForeignKeyConstraint(['from_token_id'], ['tokens.id'], ),
    sa.ForeignKeyConstraint(['to_token_id'], ['tokens.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_swap_txs_user_id'), 'swap_txs', ['user_id'], unique=False)
    op.create_table('voucher_nfts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('template_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('asset_id', sa.String(length=128), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'REDEEMED', 'EXPIRED', name='voucher_status_enum'), nullable=False),
    sa.Column('redeemed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['template_id'], ['voucher_templates.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('template_id', 'asset_id', name='uq_template_asset')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('voucher_nfts')
    op.drop_index(op.f('ix_swap_txs_user_id'), table_name='swap_txs')
    op.drop_table('swap_txs')
    op.drop_index(op.f('ix_point_txs_wallet_id'), table_name='point_txs')
    op.drop_table('point_txs')
    op.drop_table('balances')
    op.drop_index(op.f('ix_wallets_pubkey'), table_name='wallets')
    op.drop_table('wallets')
    op.drop_table('voucher_templates')
    op.drop_index('uq_single_loyl', table_name='tokens', postgresql_where=sa.text('settlement_token IS TRUE'))
    op.drop_index(op.f('ix_tokens_mint'), table_name='tokens')
    op.drop_table('tokens')
    op.drop_index(op.f('ix_users_privy_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_celery_task_logs_status'), table_name='celery_task_logs')
    op.drop_index(op.f('ix_celery_task_logs_queue'), table_name='celery_task_logs')
    op.drop_table('celery_task_logs')
    op.drop_index(op.f('ix_businesses_slug'), table_name='businesses')
    op.drop_index(op.f('ix_businesses_owner_email'), table_name='businesses')
    op.drop_table('businesses')
    # ### end Alembic commands ###
