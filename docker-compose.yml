
volumes:
        pgdata: # must be configured to server volume 
                # name: pgdata
                # driver: local
                # driver_opts:
                #         device: ${HOME}/data/pgdata
                #         o: bind
                #         type: none
        frontend:
                name: frontend
                driver: local
                driver_opts:
                        device: ./srcs/frontend
                        o: bind
                        type: none     
networks:
  tnet:
    name: tnet
    driver: bridge

services:
  landing:
    container_name: landing
    build:
      context: .
      dockerfile: containers/landing/Dockerfile
    ports:
      - "80"
    networks:
      - tnet
    restart: always
  fastapi:
    container_name: fastapi
    build: 
      context: .
      dockerfile: containers/fastapi/Dockerfile
    ports:
      - "8000"
    depends_on:
      - postgres
    networks:
      - tnet
    restart: always
  postgres:
    container_name: postgres
    shm_size: 128mb
    build: 
      context: .
      dockerfile: containers/postgres/Dockerfile
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
        - "5432"
    volumes:
      - pgdata:/var/lib/postgresql/data/
    networks:
      - tnet
    restart: always
  redis:
    container_name: redis
    build:
      context: .
      dockerfile: containers/redis/Dockerfile
      args:
        REDIS_PASSWORD: ${REDIS_PASSWORD}
    ports:
      - "6379"
    networks:
      - tnet
    restart: always
  # adminer:
  #   container_name: adminer
  #   build:
  #     context: .
  #     dockerfile: containers/adminer/Dockerfile
  #   depends_on:
  #     - postgres
  #   ports:
  #     - "9090:9090"
  #   networks:
  #     - tnet
  #   restart: always
  
